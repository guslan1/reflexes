{
  "reflexes.dll": {
    "C:\\Users\\Gustav\\desktop\\2dv610\\reflexes\\reflexes\\View\\ConsoleView.cs": {
      "reflexes.View.ConsoleView": {
        "System.Void reflexes.View.ConsoleView::DisplayGreetingMessage()": {
          "Lines": {
            "15": 1,
            "16": 1,
            "17": 1,
            "18": 1,
            "19": 1,
            "20": 1
          },
          "Branches": []
        },
        "System.Void reflexes.View.ConsoleView::DisplayEasyLevel()": {
          "Lines": {
            "23": 1,
            "24": 1,
            "25": 1,
            "26": 1
          },
          "Branches": []
        },
        "System.Void reflexes.View.ConsoleView::.ctor()": {
          "Lines": {
            "9": 2,
            "10": 2,
            "11": 2,
            "12": 2
          },
          "Branches": []
        }
      }
    },
    "C:\\Users\\Gustav\\desktop\\2dv610\\reflexes\\reflexes\\Model\\Alphabet.cs": {
      "reflexes.Model.Alphabet": {
        "System.Collections.Generic.List`1<System.String> reflexes.Model.Alphabet::RandomAlphabet(System.Collections.Generic.List`1<System.String>)": {
          "Lines": {
            "18": 3,
            "19": 3,
            "20": 3,
            "21": 3,
            "23": 78,
            "24": 75,
            "25": 75,
            "26": 75,
            "27": 75,
            "28": 75,
            "29": 3,
            "30": 3
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 66,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 75
            },
            {
              "Line": 23,
              "Offset": 66,
              "EndOffset": 68,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 3
            }
          ]
        },
        "System.Collections.Generic.List`1<System.String> reflexes.Model.Alphabet::AlphabetList()": {
          "Lines": {
            "33": 3,
            "34": 3,
            "35": 159,
            "36": 75,
            "37": 75,
            "38": 75,
            "39": 3,
            "40": 3
          },
          "Branches": [
            {
              "Line": 35,
              "Offset": 43,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 75
            },
            {
              "Line": 35,
              "Offset": 43,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 3
            }
          ]
        },
        "System.Int32 reflexes.Model.Alphabet::WordsLeft()": {
          "Lines": {
            "43": 1,
            "44": 1,
            "45": 1
          },
          "Branches": []
        },
        "System.Boolean reflexes.Model.Alphabet::IsAlphabetEmpty()": {
          "Lines": {
            "48": 2,
            "49": 2,
            "50": 1,
            "51": 1,
            "53": 1,
            "54": 2
          },
          "Branches": [
            {
              "Line": 49,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 49,
              "Offset": 17,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "System.Collections.Generic.IReadOnlyList`1<System.String> reflexes.Model.Alphabet::get_getAlphabet()": {
          "Lines": {
            "59": 6
          },
          "Branches": []
        },
        "System.Void reflexes.Model.Alphabet::ClearAlphabet()": {
          "Lines": {
            "63": 1,
            "64": 1,
            "65": 1
          },
          "Branches": []
        },
        "System.Void reflexes.Model.Alphabet::.ctor()": {
          "Lines": {
            "9": 3,
            "12": 3,
            "13": 3,
            "14": 3,
            "15": 3
          },
          "Branches": []
        }
      }
    }
  }
}